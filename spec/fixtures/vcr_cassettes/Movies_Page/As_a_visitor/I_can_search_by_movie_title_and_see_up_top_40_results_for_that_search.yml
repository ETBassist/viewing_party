---
http_interactions:
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<DONT_EXPOSE_MY_DATA_PLEASE>&page=1
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 09 Dec 2020 20:25:53 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 1d07855a178a7ad07a8bd34ed25f09cc.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-C1
      X-Amz-Cf-Id:
      - jNkcgngMnfohuEspZZWXOJGfGoJ4wzyBvpK0aXjphLaXGRPiJ9T7Xw==
      Age:
      - '8948'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 09 Dec 2020 22:55:01 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/movie/top_rated?api_key=<DONT_EXPOSE_MY_DATA_PLEASE>&page=2
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 09 Dec 2020 20:25:53 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=21600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 e8075a4d83e15c8c6543597e1a8de939.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-C1
      X-Amz-Cf-Id:
      - 9rOuCj2PDm4hS2gYIFKwLwKTDFPWr9HmNlZoWYEK0W_IwUE3u_1q2w==
      Age:
      - '8948'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 09 Dec 2020 22:55:01 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_EXPOSE_MY_DATA_PLEASE>&page=1&query=Love
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 09 Dec 2020 22:55:00 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 83a6f42adff040301dd9cde8ff611a9d.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-C1
      X-Amz-Cf-Id:
      - at8hTyZ2_iIci_uC41OyF4Siqx7wmrmpDNGQEbdWya17kB2GRNouBQ==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 09 Dec 2020 22:55:01 GMT
- request:
    method: get
    uri: https://api.themoviedb.org/3/search/movie?api_key=<DONT_EXPOSE_MY_DATA_PLEASE>&page=2&query=Love
    body:
      encoding: US-ASCII
      string: ''
    headers:
      User-Agent:
      - Faraday v1.1.0
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
  response:
    status:
      code: 200
      message: OK
    headers:
      Content-Type:
      - application/json;charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Date:
      - Wed, 09 Dec 2020 22:55:00 GMT
      Server:
      - openresty
      Access-Control-Allow-Origin:
      - "*"
      Access-Control-Allow-Methods:
      - GET, HEAD, POST, PUT, DELETE, OPTIONS
      Access-Control-Expose-Headers:
      - ETag, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, Retry-After,
        Content-Length, Content-Range
      Cache-Control:
      - public, max-age=600
      Vary:
      - Accept-Encoding
      X-Cache:
      - Hit from cloudfront
      Via:
      - 1.1 1d07855a178a7ad07a8bd34ed25f09cc.cloudfront.net (CloudFront)
      X-Amz-Cf-Pop:
      - SFO53-C1
      X-Amz-Cf-Id:
      - saBj_WKcge0RxqawZC0XpcOxZqwi-Q3ACKNXIzAnVCC50Tq8kZWOtQ==
      Age:
      - '1'
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Wed, 09 Dec 2020 22:55:01 GMT
recorded_with: VCR 6.0.0
